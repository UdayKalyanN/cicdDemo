pipeline {
    agent {
        docker {
            image 'abhishekf5/maven-abhishek-docker-agent:v1'
            args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
        }
    }

    environment {
        DOCKER_HUB_USERNAME = 'udaykalyannuthalapati'
        DOCKER_IMAGE_BACKEND = "${DOCKER_HUB_USERNAME}/demo-backend:${BUILD_NUMBER}"
        DOCKER_IMAGE_FRONTEND = "${DOCKER_HUB_USERNAME}/demo-frontend:${BUILD_NUMBER}"
        REGISTRY_CREDENTIALS = credentials('dockerhub-credentials')
        GIT_REPO_NAME = "cicdDemo"
        GIT_USER_NAME = "UdayKalyanN"
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', 
                    url: 'https://github.com/UdayKalyanN/cicdDemo.git'
            }
        }

        stage('Build and Test') {
            steps {
                sh 'ls -ltr'
                // Build the backend project
                sh 'mvn clean package'
            }
        }

        stage('Static Code Analysis') {
            environment {
                SONAR_URL = "http://localhost:9000"  // Update this with your SonarQube URL
            }
            steps {
                withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
                    sh '''
                        mvn sonar:sonar \
                            -Dsonar.login=$SONAR_AUTH_TOKEN \
                            -Dsonar.host.url=${SONAR_URL} \
                            -Dsonar.projectKey=${JOB_NAME} \
                            -Dsonar.projectName=${JOB_NAME}
                    '''
                }
            }
        }

        stage('Build and Push Docker Images') {
            steps {
                script {
                    // Login to Docker Hub
                    sh 'echo $REGISTRY_CREDENTIALS_PSW | docker login -u $REGISTRY_CREDENTIALS_USR --password-stdin'

                    // Build and push backend image
                    sh """
                        docker build -t ${DOCKER_IMAGE_BACKEND} \
                                   -t ${DOCKER_HUB_USERNAME}/demo-backend:latest \
                                   --build-arg BUILD_VERSION=${BUILD_NUMBER} \
                                   --build-arg BUILD_DATE=\$(date -u +'%Y-%m-%dT%H:%M:%SZ') \
                                   .
                        docker push ${DOCKER_IMAGE_BACKEND}
                        docker push ${DOCKER_HUB_USERNAME}/demo-backend:latest
                    """

                    // Build and push frontend image
                    dir('frontend') {
                        sh """
                            docker build -t ${DOCKER_IMAGE_FRONTEND} \
                                       -t ${DOCKER_HUB_USERNAME}/demo-frontend:latest \
                                       --build-arg BUILD_VERSION=${BUILD_NUMBER} \
                                       --build-arg BUILD_DATE=\$(date -u +'%Y-%m-%dT%H:%M:%SZ') \
                                       .
                            docker push ${DOCKER_IMAGE_FRONTEND}
                            docker push ${DOCKER_HUB_USERNAME}/demo-frontend:latest
                        """
                    }
                }
            }
            post {
                always {
                    sh 'docker logout'
                }
            }
        }

        stage('Update Deployment Files') {
            steps {
                withCredentials([string(credentialsId: 'github-token', variable: 'GITHUB_TOKEN')]) {
                    sh '''
                        git config user.email "nudaykalyan06@gmail.com"
                        git config user.name "UdayKalyanN"
                        
                        # Update backend deployment
                        sed -i "s|image: ${DOCKER_HUB_USERNAME}/demo-backend:.*|image: ${DOCKER_HUB_USERNAME}/demo-backend:${BUILD_NUMBER}|g" ci-cd-manifests/backend-deployment.yaml
                        
                        # Update frontend deployment
                        sed -i "s|image: ${DOCKER_HUB_USERNAME}/demo-frontend:.*|image: ${DOCKER_HUB_USERNAME}/demo-frontend:${BUILD_NUMBER}|g" ci-cd-manifests/frontend-deployment.yaml
                        
                        # Commit and push changes
                        git add ci-cd-manifests/backend-deployment.yaml ci-cd-manifests/frontend-deployment.yaml
                        git commit -m "Update deployment images to version ${BUILD_NUMBER}"
                        git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                    '''
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
        success {
            echo '✅ Pipeline succeeded'
        }
        failure {
            echo '❌ Pipeline failed'
        }
    }
}